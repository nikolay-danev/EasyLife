@using EasyLife.Domain.GlobalConstants
@using EasyLife.Domain.GlobalConstatns
@using Microsoft.AspNetCore.Identity.UI.Pages.Internal.Account.Manage
@using Microsoft.CodeAnalysis.CSharp.Syntax
@model ICollection<EasyLife.Domain.ViewModels.OrderViewModel>
@{
    ViewData["Title"] = "MyOrders";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="text-center">
    @if (!string.IsNullOrEmpty(ViewBag.StatusMessage))
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @ViewBag.StatusMessage
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }
    <h2 class="display-4">Your orders</h2>
</div>
<hr class="h-100 bg-success" />
<table class="table table-hover">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">Service type</th>
            <th scope="col">Address to perform the service</th>
            <th scope="col">Status</th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < Model.Count; i++)
        {
            var order = Model.ToList()[i];
            <tr>
                <th scope="row">@(i + 1)</th>
                <td>@order.ServiceType</td>
                <td>@order.Address</td>
                @if (order.Status == OrderStatus.InProgress)
                {
                    <td><span class="badge badge-pill badge-warning">@OrderStatus.InProgress</span></td>
                }
                @if (order.Status == OrderStatus.Completed)
                {
                    <td><span class="badge badge-pill badge-success">@OrderStatus.Completed</span></td>
                }
            </tr>
        }
    </tbody>
</table>
